---
import { config } from "@config"
import { ViewTransitions } from "astro:transitions"
import { themes } from "@/lib/utils"

import "../styles/global.css"

interface Props {
  title: string
  description: string
  image?: string
  keywords?: string[]
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site)

const {
  title = config.site.title,
  description = config.metadata.description,
  image = config.metadata.image,
  keywords = config.metadata.keywords
} = Astro.props
---

<head>
  <!-- Global Metadata -->
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <link rel="icon" type="image/svg+xml" href={config.site.favicon} />
  <link
    rel="icon"
    href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22></text></svg>"
  />
  <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/katex@0.16.10/dist/katex.min.css"
    integrity="sha384-wcIxkf4k558AjM3Yz3BBFQUbk/zgIYC2R0QpeeYb+TwlBVMrlgLqwRjRtGZiK7ww"
    crossorigin="anonymous"
  />

  <!-- Sitemap -->
  <link rel="sitemap" href="/sitemap-index.xml" />

  <link
    rel="alternate"
    type="application/rss+xml"
    title=`RSS feed | ${config.site.title}`
    href={new URL("rss.xml", Astro.site)}
  />

  <link
    rel="alternate"
    type="application/json"
    title=`JSON feed | ${config.site.title}`
    href={new URL("rss.json", Astro.site)}
  />

  <meta name="generator" content={Astro.generator} />

  <!-- Canonical URL -->
  <link rel="canonical" href={canonicalURL} />

  <!-- Primary Meta Tags -->
  <title>{title}</title>
  <meta name="title" content={title} />
  <meta name="description" content={description} />
  <mete name="keywords" content={keywords}></mete>

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content="website" />
  <meta property="og:url" content={Astro.url} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={new URL(image, Astro.url)} />

  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={Astro.url} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  <meta property="twitter:image" content={new URL(image, Astro.url)} />

  <!-- PageFind -->
  <link href="/pagefind/pagefind-ui.css" rel="stylesheet" />
  <script is:inline src="/pagefind/pagefind-ui.js"></script>

  <ViewTransitions fallback="none" />

  {/* Inlined to avoid flash of white content. */}
  <script is:inline define:vars={{ themes }}>
    const getStoredTheme = () => localStorage.getItem("theme")

    const setTheme = theme => {
      const root = document.documentElement
      root.setAttribute("data-theme", theme)
      root.classList.toggle("dark", theme === "dark")
      localStorage.setItem("theme", theme)
    }

    const getPreferredTheme = () => {
      const stored = getStoredTheme()
      if (stored) return stored
      return window.matchMedia("(prefers-color-scheme: light)").matches
        ? "light"
        : "dark"
    }

    setTheme(getPreferredTheme())

    document.addEventListener("astro:after-swap", () =>
      setTheme(getPreferredTheme())
    )
    document.addEventListener("theme-change", event =>
      setTheme(event.detail.theme)
    )
    window
      .matchMedia("(prefers-color-scheme: dark)")
      .addEventListener("change", event => {
        const newTheme = event.matches ? "dark" : "light"
        setTheme(newTheme)
      })
  </script>
</head>
